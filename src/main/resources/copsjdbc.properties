# zookeeper parameters
zookeeper.connect=127.0.0.1:2181
#zookeeper.session.timeout.ms=400
#zookeeper.sync.time.ms=200
 
# kafka parameters
kafka.group.id= copsjdbcsink
kafka.topic=cops_output

# These parameters will be passed to kafka consumer config.  
# offset storage can be kafka or zookeeper. default is zookeeper
#kafka.offsets.storage=kafka
# behavior if consumer offsets for above group.id are present. 
# can be smallest meaning read from beginning or largest meaning read only new messages
#kafka.auto.offset.reset=smallest

# number of parallel kafka consumers to run
consumer.threads=1

# implementation class to process messages
adapter.message.processor=com.ligadata.adapters.jdbc.BufferedJDBCSink

# SimpleDateFormat format string used to parse date in input message
input.date.format=yyyy-MM-dd'T'HH:mm:ss.SSS

# jdbc connection
jdbc.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
jdbc.url=jdbc:sqlserver://ec2-54-160-245-36.compute-1.amazonaws.com:1433;databaseName=admin;
jdbc.user=admin
jdbc.password=pass123
jdbc.insert.statement=INSERT INTO [COPS] ([ID],[APPID],[DATETIMESTAMP],[TIMEZONE],[PERSON_ID],[AUTHENTICATIONMETHOD],[BUSINESSFUNCTION],[CLIENTIP],[ACTIONCODE],[CORRID],[CORRIDPARENT],[DEVICE],[ERRORMESSAGE],[MESSAGETEXT],[CONFIDENTIALDATALABELS],[CONFIDENTIALRECORDCOUNT],[PROPRIETARYDATALABELS],[PROPRIETARYDATAVALUES],[PROPRIETARYRECORDCOUNT],[PROCESSID],[PROCESSNAME],[RESOURCE],[RESOURCEHOST],[RESOURCEPORT],[RESOURCEPROTOCOL],[RESOURCETYPE],[RESULT],[TYPECODE],[USERID],[SYSTEMUSER],[USERROLE],[EMP_FRST_NM],[EMP_LST_NM],[APP_NM],[SUM_NP],[SUM_PI],[DQ_SCORE],[EXTRA]) VALUES ({$Id},{$applicationId},{$timestamp},{$timezone},{$details.personNumber},{$details.authenticationmethod},{$details.businessfunction},{$details.clientip},{$details.action},{$correlationId},{$correlationParentId},{$details.device},{$details.errormessage},{$details.message},{$details.confidentialdatalabels},{$details.confidentialrecordcount},{$details.proprietarydatalabels},{$details.proprietarydatavalues},{$details.proprietaryrecordcount},{$details.processid},{$details.processname},{$details.resource},{$details.resourcehost},{$details.resourceport},{$details.resourceprotocol},{$details.resourcetype},{$details.result},{$details.type},{$details.user},{$details.systemuser},{$details.userRole},{$details.FirstName},{$details.LastName},{$details.ApplicationName},{$details.sumNP},{$details.sumPI},{$dqscore},{$details.extra})

# parameters to control message batching
# messages will be written every "count" messages or every "interval" seconds
sync.messages.count=10
sync.interval.seconds=120
