{
  "namespace": "com.ligadata.jtm.test.filter",
  "version": "0.0.1",
  "language": "scala | java | python",
  "minVersion": "2.11",
  "dependencies": "[list of jars/modules - this should go into command line arguments instead of this file]",
  "imports": [ "com.ligadata.Utils._", "com.ligadata.Utils1._" ],
  "transformations": {
    "test1": {
      "inputs": [ "com.ligadata.kamanja.samples.messages.msg1" ],
      "computes": {
        "zipcode": {
          "type": "Int",
          "val": "iplookup($in1).zipcode",
          "comment": "in scala, type could be optional"
        },
        "ipinfo": {
          "type": "IpInfo",
          "val": "iplookup($in1)"
        },
        "comment": "single comment for each element - this is transformation level computed vals that are common across all outputs",
        "comments": [ "there could be multiple comments for each element", "comment2" ]
      },
      "outputs": {
        "msg2": {
          "mapping": {
            "out1": "in1",
            "out2": "in2",
            "out3": "somefunc($in1, $in2)",
            "out4": "ipinfo.zipCode",
            "out4": "in3"
          },
          "filter": "!($in2 != -1 && $in2 < 100)",
          "computes": {
            "out7": {
              "type": "String",
              "val": "somefunc2($in1)"
            }
          }
        },
        "msg3": {
          "mapping": {
            "out2": "in1"
          },
          "mappingByName": "true"
        }
      }
    },
    "test2": {
      "inputs": ["com.ligadata.kamanja.samples.messages.msg4"],
      "outputs": {
        "msg3": {
          "mappingByName": "true",
          "mappings": {
            "out1": "in1"
          }
        }
      }
    }
  }
}
