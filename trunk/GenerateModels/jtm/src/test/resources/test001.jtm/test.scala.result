/*
 * Copyright 2016 ligaDATA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.ligadata.jtm.test.filter

import com.ligadata.KamanjaBase._
import com.ligadata.KvBase.TimeRange
import com.ligadata.kamanja.metadata.ModelDef;

import com.ligadata.Utils._
import com.ligadata.Utils1._
import com.ligadata.kamanja.samples.messages.{msg1 ⇒ mi0}
import com.ligadata.kamanja.test001.{msg2 ⇒ mo0}
import com.ligadata.kamanja.test001.{msg3 ⇒ mo1}

class Factory(modelDef: ModelDef, nodeContext: NodeContext) extends ModelInstanceFactory(modelDef, nodeContext) {
  // if more than 1 input we have to find the correct instance
  override def isValidMessage(msg: MessageContainerBase): Boolean = {
    msg.isInstanceOf[mi0]

  }
  override def createModelInstance(): ModelInstance = return new Model(this)

  // Provided in json
  override def getModelName: String = "test001"
  override def getVersion: String = "0.0.1"

  override def createResultObject(): ModelResultBase = new MappedModelResults()
}

class Model(factory: ModelInstanceFactory) extends ModelInstance(factory) {

  override def execute(txnCtxt: TransactionContext, outputDefault: Boolean): ModelResultBase = {

    if(msg.isInstanceOf[mi0]) {    }


 }


}

